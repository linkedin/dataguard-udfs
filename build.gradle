plugins {
  id 'idea'
  id 'java'
}


allprojects {
  java {
    toolchain {
      languageVersion.set(JavaLanguageVersion.of(11)) // Set default to Java 11
    }
  }

  configurations.all {
    // Exclude dependencies with GPL licenses for now. These are
    // transient dependencies that do not seem to be used.
    exclude group: 'com.sun.jersey', module: 'jersey-core'
    exclude group: 'com.sun.jersey', module: 'jersey-json'
    exclude group: 'com.sun.jersey', module: 'jersey-server'
    exclude group: 'com.sun.xml.bind', module: 'jaxb-impl'
    exclude group: 'javax.xml.stream', module: 'stax-api'
    exclude group: 'org.glassfish', module: 'javax.json'
    exclude group: 'org.mortbay.jetty', module: 'jetty'
    exclude group: 'org.mortbay.jetty', module: 'jetty-sslengine'
    exclude group: 'org.mortbay.jetty', module: 'jetty-util'
  }
}

ext {
  airliftSlice = "io.airlift:slice:0.45"
  airliftUnits = "io.airlift:units:1.7"
  antlr4_4_9_3 = "org.antlr:antlr4:4.9.3"
  antlr4_4_11_1 = "org.antlr:antlr4:4.11.1"
  assertj = "org.assertj:assertj-core:3.11.1"
  commonsIo = "commons-io:commons-io:2.11.0"
  guava = "com.google.guava:guava:33.0.0-jre"
  hadoopCommon = "org.apache.hadoop:hadoop-common:2.10.0"
  jmh = "org.openjdk.jmh:jmh-core:1.36"
  jmhAnnotations = "org.openjdk.jmh:jmh-generator-annprocess:1.34"
  jodaTime = "joda-time:joda-time:2.12.7"
  jsonSimple = "com.googlecode.json-simple:json-simple:1.1.1"
  junitJupiterApi = "org.junit.jupiter:junit-jupiter-api:5.5.1"
  junitJupiterEngine = "org.junit.jupiter:junit-jupiter-engine:5.5.1"
  junitJupiterParams = "org.junit.jupiter:junit-jupiter-params:5.5.1"
  log4j2Slf4jImpl = "org.apache.logging.log4j:log4j-slf4j-impl:2.17.1"
  scalaLibrary = "org.scala-lang:scala-library:2.12.15"
  slf4jdepapi = "org.slf4j:slf4j-api:1.7.36"
  sparkCatalyst_2_12 = "org.apache.spark:spark-catalyst_2.12:3.1.1"
  sparkCore_2_12 = "org.apache.spark:spark-core_2.12:3.1.1"
  sparkHive_2_12 = "org.apache.spark:spark-hive_2.12:3.1.1"
  sparkSql_2_12 = "org.apache.spark:spark-sql_2.12:3.1.1"
  transportApi = "com.linkedin.transport:transportable-udfs-api:0.1.7"
  transportSpark = "com.linkedin.transport:transportable-udfs-spark_2.12:0.1.7"
  transportTrino = "com.linkedin.transport:transportable-udfs-trino:0.1.7"
  transportTypeSystem = "com.linkedin.transport:transportable-udfs-type-system:0.1.7"
  trinoMainTests = "io.trino:trino-main:406:tests"
  trinoSpi = "io.trino:trino-spi:406"
  trinoTesting = "io.trino:trino-testing:406"
}

allprojects {
  group = 'com.linkedin.dataguard'
  version = '1.0'
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'idea'

  repositories {
    mavenCentral()
  }

  dependencies {
    testImplementation rootProject.ext.assertj
    testImplementation rootProject.ext.junitJupiterApi
    testImplementation rootProject.ext.junitJupiterParams
    testRuntimeOnly rootProject.ext.junitJupiterEngine
  }

  tasks.withType(Test) {
    useJUnitPlatform()
  }
}
